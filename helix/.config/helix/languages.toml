# notes -----------------------------------------------------------------------
[[language]]
name = "markdown"
formatter = { command = "dprint", args = ["fmt", "--stdin", "md"] }
auto-format = true
language-servers = ["markdown-oxide", "ltex-ls"]

[language-server.mardown-oxide]
command = "markdown-oxide"

[language-server.markdoc-ls]
command = "markdoc-ls"
args = ["--stdio"]
config = { "root" = "/home/fjorn/projects/fjorndotdev", "path" = "content/blog", config = { "root" = "/home/fjorn/projects/fjorndotdev", "path" = "content/blog" } }

[language-server.ltex-ls.config]
ltex.language = "en-US"
ltex.disabledRules = { "en-US" = ["PROFANITY"] }
ltex.dictionary = { "en-US" = ["dotfile", "dotfiles", "mise", "homebrew", "Alacritty", "todo", "poop", "pee", "yeet", "Dotfiles", "Mise", "TODO", "inting", "inted"] }

# web dev ---------------------------------------------------------------------
[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

[[language]]
name = "javascript"
formatter = { command = "dprint", args = ["fmt", "--stdin", "js"] }
auto-format = true
language-servers = [{ name = "typescript-language-server", except-features = ["format"] }, "biome"]

[[language]]
name = "typescript"
formatter = { command = "dprint", args = ["fmt", "--stdin", "ts"] }
auto-format = true
language-servers = [{ name = "typescript-language-server", except-features = ["format"] }, "biome"]

[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]

[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]

[[language]]
name = "jsx"
language-servers = [{ name = "typescript-language-server", except-features = ["format"] }, "tailwindcss-ls", "biome"]

[[language]]
name = "tsx"
language-servers = [{ name = "typescript-language-server", except-features = ["format"] }, "tailwindcss-ls", "biome"]

[[language]]
name = "svelte"
language-servers = ["svelteserver", "tailwindcss-ls"]

[[language]]
name = "astro"
auto-format = true
language-servers = ["astro-ls"]

[language-server.astro-ls]
command = "astro-ls"
args = ["--stdio"]
config = { typescript = { tsdk = "/home/fjorn/.bun/install/global/node_modules/typescript/lib" }, environment = "node" }

# server ----------------------------------------------------------------------
[[language]]
name = "python"
language-servers = ["pyright", "ruff"]
formatter = { command = "black", args = ["--line-length", "88", "--quiet", "-"] }

[language-server.pyright.config.python.analysis]
typeCheckingMode = "basic"

[language-server.ruff]
command = "ruff-lsp"

[language-server.ruff.config.settings]
args = ["--ignore", "E501"]

[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }

[language-server.rust-analyzer.config.check]
command = "clippy"

[[language]]
name = "sql"
language-servers = ["sql-language-server"]

[language-server.sql-language-server]
command = "sql-language-server"
args = ["up", "--method", "stdio"]

# config ----------------------------------------------------------------------
[[language]]
name = "toml"
formatter = { command = "dprint", args = ["fmt", "--stdin", "toml"] }
auto-format = true

[[language]]
name = "json"
formatter = { command = "dprint", args = ["fmt", "--stdin", "json"] }
auto-format = true

[language-server.vscode-json-language-server]
config = { provideFormatter = false }

[[language]]
name = "bash"
formatter = { command = "dprint", args = ["fmt", "--stdin", "sh"] }
auto-format = true

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json" = "roles/{tasks,handlers}/*.{yml,yaml}"
